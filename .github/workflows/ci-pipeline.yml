name: CI/CD regisono

on:
  schedule:
    - cron: '0 */6 * * *' # Exécution toutes les 6 heures
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Cloner le dépôt
        uses: actions/checkout@v3

      - name: 🛠 Installer PHP et Composer
        run: |
          sudo apt update
          sudo apt install -y php-cli unzip curl
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
          composer install

      - name: 🔍 Exécuter PHPStan (Static Code Analysis)
        run: |
          vendor/bin/phpstan analyse --level=max src/ --no-progress --error-format=table --memory-limit=2G || true

      - name: 🌐 Installer Google Chrome et ChromeDriver
        run: |
          sudo apt update
          sudo apt install -y wget unzip
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install
          google-chrome --version
          CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          chromedriver --version

      - name: 🛠 Installer les dépendances Python et Selenium
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install selenium webdriver-manager

      - name: 🖥 Lancer le test Selenium - Test 1
        run: |
          source venv/bin/activate
          python3 tests/selenium_tests.py

      - name: 🖥 Lancer le test Selenium - Test 2
        run: |
          source venv/bin/activate
          python3 tests/selenium_test_pack_or.py

      - name: 🛡️ SQL Injection Test 1 (Direct)
        run: |
          source venv/bin/activate
          wget https://github.com/sqlmapproject/sqlmap/archive/refs/heads/master.zip
          unzip master.zip
          python3 sqlmap-master/sqlmap.py -u "https://regisono.com/login.php?id=1" --batch --dbs --random-agent --tamper=space2comment || true

      - name: 🛡️ SQL Injection Test 2 (Automatisation)
        run: |
          source venv/bin/activate
          python3 tests/automatisation_sqlmap.py

      - name: 📅 Définir la date d'exécution
        run: echo "DATE_EXECUTION=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: 📩 Envoyer une notification par mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "[GitHub Actions] Tests de sécurité terminés : Gestion_Note"
          to: "aboulayesamb@gmail.com"
          from: "GitHub Actions"
          body: |
            Bonjour,

            L'exécution du pipeline de sécurité est terminée.

            - ✅ Résultat : ${{ job.status }}
            - 📅 Date : ${{ env.DATE_EXECUTION }}
            - 🔍 Consultez GitHub Actions pour plus de détails.

            Cordialement,
            GitHub Actions
