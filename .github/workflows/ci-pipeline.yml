name: CI/CD Gestion_Note

on:
  schedule:
    - cron: '0 */12 * * *' # Exécution toutes les 12 heures
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Cloner le dépôt
        uses: actions/checkout@v3

      - name: 🛠 Installer PHP et Composer
        run: |
          sudo apt update
          sudo apt install -y php-cli unzip curl
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
          composer install

      - name: 🐳 Vérifier Docker
        run: docker version

      - name: 🐳 Lancer OWASP ZAP en mode headless (avec accès API)
        run: |
          docker run -d --name zap -p 8080:8080 zaproxy/zap-stable zap.sh \
            -daemon -host 0.0.0.0 -port 8080 \
            -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
          echo "⏳ Attente du démarrage de ZAP..."

          TIMEOUT=300 # Max 5 minutes
          ELAPSED=0
          while true; do
            if curl -s http://127.0.0.1:8080 > /dev/null; then
              echo "✅ OWASP ZAP est prêt et accepte les connexions API !"
              break
            fi
            if [ "$ELAPSED" -ge "$TIMEOUT" ]; then
              echo "❌ ZAP n'a pas démarré après 5 minutes."
              docker logs zap
              exit 1
            fi
            echo "⏳ ZAP n'est pas encore prêt... Vérification dans 10 secondes"
            sleep 10
            ELAPSED=$((ELAPSED+10))
          done

      - name: 📜 Vérifier les logs de OWASP ZAP
        run: docker logs zap

      - name: 🛠 Installer les dépendances Python
        run: pip install python-owasp-zap-v2.4

      - name: 🕷 Exécuter Spider Scan
        run: python3 tests/spider.py

      - name: 🔥 Exécuter Active Scan
        run: python3 tests/active_scan.py

      - name: 🔑 Exécuter Form Authentication
        run: python3 tests/form_autentification.py

      - name: 📩 Envoyer une notification par mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "[GitHub Actions] Exécution terminée : Pipeline gestion_note"
          to: "aboulayesamb@gmail.com"
          from: "GitHub Actions"
          body: |
            Bonjour,

            L'exécution du pipeline CI/CD est terminée avec succès.

            - ✅ Résultat : ${{ job.status }}
            - 📅 Date : $(date)
            - 🔍 Consultez GitHub Actions pour plus de détails.

            Cordialement,
            GitHub Actions
